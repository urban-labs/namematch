Search.setIndex({"docnames": ["about", "algorithm", "api", "index", "match_setup", "understanding_results"], "filenames": ["about.rst", "algorithm.rst", "api.rst", "index.rst", "match_setup.rst", "understanding_results.rst"], "titles": ["About Name Match", "Detailed Algorithm Documentation", "API Reference", "Name Match Documentation", "Setting Up a Match", "Understanding Results"], "terms": {"tool": [0, 1, 4], "probabilist": [0, 1, 4], "link": [0, 1, 2, 4, 5], "record": [0, 1, 2, 4, 5], "individu": [0, 1, 2], "entiti": [0, 4, 5], "e": [0, 1, 2, 4, 5], "g": [0, 1, 2, 4, 5], "peopl": [0, 1, 4, 5], "within": [0, 1], "across": [0, 1, 4, 5], "dataset": [0, 1, 2, 4, 5], "The": [0, 1, 2, 4, 5], "code": [0, 1, 4], "optim": [0, 1, 2, 4], "crimin": 0, "justic": 0, "arrest": [0, 1, 4, 5], "victim": [0, 1, 4], "citi": 0, "program": [0, 4], "etc": [0, 1, 2], "least": [0, 1, 2, 4], "first": [0, 1, 2, 4], "last": [0, 1, 2, 4], "date": [0, 1, 4], "birth": [0, 1, 4], "ag": [0, 1, 4], "some": [0, 1, 2, 4], "missing": [0, 1, 2, 4], "dob": [0, 1, 2, 4, 5], "toler": [0, 4], "If": [0, 1, 2, 4], "avail": [0, 1, 2, 4, 5], "other": [0, 1, 2, 4, 5], "data": [0, 1, 2, 3, 5], "field": [0, 1, 2, 3], "like": [0, 1, 2, 4], "middl": [0, 1, 4], "initi": [0, 1, 2, 4], "race": [0, 1, 4], "gender": [0, 1, 4], "address": [0, 1, 2, 4], "zipcod": [0, 1], "can": [0, 1, 2, 4, 5], "includ": [0, 1, 2, 4, 5], "strengthen": 0, "qualiti": [0, 1, 4, 5], "goal": [0, 1], "add": [0, 1, 2, 4], "univers": [0, 1, 2], "person": [0, 1, 2, 4, 5], "identifi": [0, 2, 3, 5], "column": [0, 1, 2, 4], "": [0, 1, 2, 4, 5], "so": [0, 1, 2, 4, 5], "possibl": [0, 1, 4], "easili": [0, 2], "all": [0, 1, 2, 4, 5], "refer": [0, 1, 3, 4, 5], "same": [0, 1, 2, 4, 5], "To": [0, 1, 2, 4], "thi": [0, 1, 2, 4, 5], "train": [0, 1, 2, 4], "learn": [0, 1, 4], "model": [0, 2, 3, 4], "pair": [0, 1, 2, 4, 5], "look": [0, 1, 2, 4], "when": [0, 2, 4, 5], "thei": [0, 1, 2, 4, 5], "v": [0, 5], "don": [0, 1, 4, 5], "t": [0, 1, 2, 4, 5], "predict": [0, 1, 3, 4, 5], "likelihood": [0, 1, 4], "two": [0, 1, 2, 4], "onc": [0, 1, 2], "we": [0, 1, 2, 4, 5], "know": [0, 1, 4, 5], "which": [0, 1, 2, 3, 5], "assign": [0, 1, 2, 4], "each": [0, 1, 2, 4], "uniqu": [0, 1, 2, 4], "its": [0, 1, 2, 4], "becaus": [0, 1, 2, 4, 5], "primari": 0, "thought": 0, "both": [0, 1, 2, 4], "linkag": [0, 1, 4, 5], "dedupl": [0, 4], "That": [0, 4], "ha": [0, 1, 2, 4], "collaps": 0, "one": [0, 1, 2, 4], "row": [0, 1, 2, 4], "per": [0, 1, 2, 4], "how": [0, 2, 3, 4, 5], "ar": [0, 1, 2, 4, 5], "compar": [0, 1, 2, 4], "contain": [0, 1, 2, 4, 5], "help": [0, 1, 2, 4], "gener": [0, 1, 2], "seri": [0, 2, 4], "similar": [0, 1, 2], "metric": [0, 1, 2, 4, 5], "from": [0, 1, 2, 4], "correspond": [0, 1, 2, 4], "anoth": [0, 1, 4], "exactli": [0, 2, 4], "depend": [0, 1, 2], "type": [0, 1, 2, 4], "inform": [0, 1, 2, 4, 5], "string": [0, 1, 2, 4], "categor": [0, 1, 2, 4], "variabl": [0, 1, 3], "edit": [0, 1, 2, 4], "distanc": [0, 1, 2, 4], "between": [0, 1, 2, 4], "number": [0, 1, 2, 4, 5], "dai": [0, 1, 4], "whether": [0, 1, 2, 4], "exampl": [0, 1, 4], "might": [0, 1, 2, 4], "doe": [0, 1, 2, 4], "distinguish": [0, 4], "non": [0, 1, 2, 4, 5], "built": [0, 2, 4], "supervis": [0, 1], "http": 0, "en": 0, "wikipedia": 0, "org": 0, "wiki": 0, "supervised_learn": 0, "mean": [0, 1, 4, 5], "process": [0, 1, 2, 3, 5], "label": [0, 1, 2, 4, 5], "set": [0, 1, 2, 3, 5], "ground": [0, 1, 2, 4, 5], "truth": [0, 1, 2, 4, 5], "see": [0, 1, 2, 4, 5], "section": [0, 1, 4], "below": [0, 1, 4, 5], "more": [0, 1, 2, 4], "where": [0, 1, 2, 4], "come": [0, 1], "determin": [0, 1, 2, 4], "your": [0, 1, 3], "meet": [0, 1, 2], "go": [0, 1], "list": [0, 1, 2, 4], "chain": [0, 1], "togeth": [0, 1, 2, 4, 5], "form": [0, 1, 2, 4], "cluster": [0, 3, 4], "group": [0, 1, 4, 5], "For": [0, 1, 2, 4, 5], "A": [0, 1, 2, 4], "b": [0, 1, 4], "c": [0, 1], "id": [0, 1, 2, 4], "becom": [0, 1, 2, 4], "domain": [0, 4], "knoweldg": 0, "experti": 0, "particular": 0, "you": [0, 1, 2, 4, 5], "even": [0, 4], "creat": [0, 1, 2, 3], "custom": [0, 4], "function": [0, 2, 3], "discard": 0, "violat": [0, 1, 2, 4, 5], "ani": [0, 1, 2, 4, 5], "constraint": [0, 1, 2, 3, 5], "defin": [0, 1, 2, 3], "could": [0, 2, 4], "disallow": [0, 2], "than": [0, 1, 2, 4, 5], "three": [0, 1, 2, 4], "valu": [0, 1, 2, 4, 5], "In": [0, 1, 4, 5], "order": [0, 1, 2, 4], "portion": [0, 1, 2, 4], "must": [0, 1, 2, 4], "follow": [0, 1, 2, 4], "criteria": [0, 1, 2, 4], "alreadi": [0, 1, 2, 4], "have": [0, 1, 2, 4, 5], "social": 0, "secur": 0, "fingerprint": [0, 1], "Be": 0, "granular": 0, "enough": [0, 1], "appear": [0, 1, 2], "multipl": [0, 1, 2, 4], "time": [0, 1, 2, 4, 5], "being": [0, 1, 2, 4, 5], "inconsist": 0, "john": [0, 1, 2, 4], "brown": [0, 2], "jonathan": 0, "why": [0, 3, 4], "exist": [0, 1, 2, 4], "As": [0, 1], "mention": [0, 1, 2], "abov": [0, 1, 2, 4], "those": [0, 1, 2, 4], "understand": [0, 1, 3, 4], "case": [0, 1, 2, 3], "turn": 0, "an": [0, 1, 2, 4, 5], "crimnal": 0, "context": [0, 1], "sai": [0, 1, 4], "individaul": 0, "recent": 0, "particip": 0, "exhibit": 0, "characterist": [0, 1, 2], "due": [0, 2, 5], "fact": [0, 4], "via": [0, 1, 2, 4], "arreste": 0, "despit": 0, "typo": [0, 1, 4], "nicknam": [0, 1, 2, 4], "caus": [0, 1, 2, 4, 5], "discrep": 0, "someon": 0, "9914": 0, "twice": [0, 1, 2], "known": [0, 1, 2], "els": [0, 4], "2913": 0, "NOT": [0, 4], "either": [0, 1, 2], "With": [0, 1], "just": [0, 1, 2, 4], "well": [0, 1, 2, 4], "our": [0, 1, 5], "wai": [0, 1, 2, 4], "need": [0, 1, 2, 4], "specif": [0, 1, 4], "common": [0, 1, 2, 4], "file": [0, 1, 2, 3, 5], "addit": [0, 1, 3, 5], "improv": [0, 1, 4], "extra": [0, 1, 2], "howev": [0, 1, 4], "present": [0, 1], "onli": [0, 1, 2, 4], "algorithm": [0, 2, 3, 4], "One": [0, 1, 4], "csv": [0, 1, 2, 4], "configur": [0, 1, 2, 3], "specifi": [0, 1, 2, 4], "find": [0, 1, 4], "them": [0, 1, 2, 4], "yaml": [0, 1, 2], "python": [0, 1, 2, 4], "dictionari": [0, 1, 2, 4], "option": [0, 1, 2, 4], "user": [0, 1, 2, 3], "rule": [0, 1, 4], "would": [0, 1, 2, 4, 5], "make": [0, 1, 2, 3, 5], "invalid": [0, 2, 4, 5], "copi": [0, 1, 2], "were": [0, 1, 4, 5], "now": [0, 1, 2, 5], "up": [0, 1, 2, 3], "prepar": 0, "task": [1, 2], "administr": 1, "belong": [1, 4], "best": 1, "problem": [1, 4], "mani": 1, "instanc": [1, 2], "share": [1, 2, 5], "develop": 1, "By": [1, 4], "leverag": 1, "approach": 1, "abl": 1, "These": [1, 4, 5], "repres": [1, 2, 4], "associ": [1, 2, 4], "character": 1, "There": [1, 4], "closer": 1, "stronger": 1, "get": [1, 2, 4, 5], "score": [1, 4], "estim": [1, 4], "end": [1, 2, 4], "certain": [1, 2, 4], "call": [1, 2, 4], "second": [1, 2], "0": [1, 2, 4, 5], "knowledg": [1, 4], "special": [1, 2, 3], "sourc": [1, 2], "subset": [1, 2], "pre": [1, 2, 3], "about": [1, 2, 3, 4, 5], "what": [1, 2, 3, 4, 5], "allow": [1, 2, 4], "convers": 1, "indic": [1, 2, 4, 5], "student": [1, 4], "attend": [1, 4], "elementari": 1, "school": [1, 4], "befor": [1, 2, 4], "high": [1, 2, 5], "enrol": [1, 4], "later": [1, 2], "vast": 1, "major": 1, "begin": 1, "unknown": [1, 2, 4], "fill": 1, "complet": [1, 2, 4, 5], "pictur": 1, "relat": [1, 4], "everi": [1, 2, 5], "draw": 1, "boundari": 1, "while": 1, "veri": [1, 4], "new": [1, 2, 4], "lot": 1, "happen": [1, 4], "under": 1, "hood": 1, "dure": [1, 2, 4, 5], "combin": [1, 2], "filter": [1, 2], "merg": [1, 2, 4, 5], "otherwis": [1, 2, 4], "transform": 1, "effort": 1, "accuraci": 1, "walk": 1, "through": [1, 2, 4, 5], "provid": [1, 2, 4], "terminologi": 1, "next": 1, "discuss": 1, "import": [1, 2, 4], "five": 1, "shown": 1, "diagram": 1, "produc": [1, 2, 4, 5], "critic": [1, 4], "map": [1, 2, 4], "note": [1, 2, 4], "squar": 1, "dark": 1, "border": 1, "tabular": 1, "dedup": 1, "config": [1, 2, 4], "customiz": 1, "should": [1, 2, 4, 5], "prohibit": [1, 4], "level": [1, 2], "simpli": [1, 4], "start": [1, 2], "log": [1, 2, 5], "show": 1, "variou": [1, 4, 5], "statist": [1, 2], "part": [1, 2], "track": [1, 5], "variat": 1, "hyphen": 1, "typic": [1, 2, 5], "met": [1, 2], "incarcer": 1, "sinc": [1, 2], "incid": 1, "littl": [1, 4], "messi": 1, "except": 1, "ssn": 1, "appropri": [1, 2], "read": [1, 2, 4], "organ": 1, "instruct": [1, 2, 4], "direct": 1, "exclud": [1, 2], "paramet": [1, 3], "tangibl": 1, "basic": [1, 2], "stack": 1, "tabl": [1, 2], "few": [1, 4], "ad": [1, 2, 4], "automat": [1, 2, 4], "record_id": [1, 2, 4], "file_typ": [1, 2], "blockstr": [1, 2, 5], "tmp_raw_first_nam": 1, "tmp_raw_last_nam": 1, "drop_from_nm": [1, 2], "ignor": [1, 4], "averag": 1, "take": [1, 2, 4], "too": 1, "long": 1, "comparison": [1, 2, 4], "wast": 1, "melissa": 1, "mcneill": 1, "unlik": 1, "zubin": 1, "jelveh": 1, "warrant": 1, "emploi": 1, "full": [1, 2, 4], "reason": [1, 4, 5], "melinda": 1, "mcneal": 1, "cosin": [1, 2], "definit": [1, 2, 4], "vari": [1, 4], "default": [1, 2, 4], "threshold": [1, 2, 4, 5], "rang": [1, 2], "15": 1, "found": [1, 4, 5], "yield": 1, "good": 1, "sever": [1, 2, 5], "larg": 1, "scale": 1, "ve": [1, 4], "expand": [1, 2], "observ": 1, "drop": [1, 2, 4], "x": [1, 4], "base": [1, 2, 4, 5], "again": [1, 4], "prior": [1, 4], "1993": [1, 2], "04": 1, "12": 1, "11": 1, "1954": 1, "final": [1, 2, 4, 5], "candid": [1, 2], "pass": [1, 2, 4], "intermedi": 1, "nmslib": [1, 2], "index": [1, 2, 4], "describ": [1, 4], "open": 1, "packag": 1, "vector": 1, "space": [1, 2], "queri": [1, 2], "approxim": [1, 2], "neighbor": [1, 2], "search": [1, 2], "build": [1, 2], "ask": 1, "return": [1, 2, 4], "400": 1, "most": [1, 2, 4], "letter": [1, 4], "shingl": [1, 2], "encod": [1, 4], "smith": [1, 2], "j": 1, "jo": 1, "oh": 1, "hn": 1, "n": [1, 2], "sm": 1, "mi": 1, "IT": 1, "th": 1, "h": 1, "jon": 1, "upweight": 1, "alpha": [1, 2], "save": [1, 2, 4], "u": [1, 2, 4], "comput": [1, 2, 5], "singl": [1, 2, 4], "computation": 1, "expens": 1, "slow": 1, "It": [1, 2, 4], "made": [1, 2, 4], "past": 1, "continu": 1, "trust": [1, 4], "therefor": 1, "forc": [1, 2], "main": [1, 2], "probabl": [1, 2, 4], "object": [1, 2, 4], "obtain": 1, "reli": [1, 4], "solut": 1, "implement": 1, "here": [1, 2, 4], "datafram": [1, 2, 4], "side": [1, 2], "exact": [1, 2], "calcul": [1, 2], "given": [1, 2, 4], "natur": [1, 4], "someth": [1, 4], "street": [1, 2], "charact": [1, 2, 4], "jarowinkl": 1, "flag": [1, 2, 5], "sound": 1, "soundex": 1, "nysii": 1, "sex": 1, "compon": [1, 2], "black": 1, "hispan": 1, "numer": [1, 2, 4], "geograph": [1, 2], "lat": [1, 2], "lon": [1, 2], "physic": 1, "point": [1, 2], "uniqueid": [1, 2, 4, 5], "rel": [1, 2], "frequenc": 1, "featur": [1, 2, 4], "hand": 1, "hous": [1, 2], "teach": 1, "outcom": [1, 2], "binari": 1, "split": [1, 2], "out": [1, 2, 4, 5], "sampl": [1, 2, 4, 5], "na": [1, 2, 4], "random": [1, 2], "forest": [1, 2], "unlabel": [1, 2, 4], "almost": [1, 4], "alwai": [1, 2], "top": [1, 2], "potenti": [1, 2, 4], "greater": 1, "believ": 1, "shorter": 1, "slimmer": 1, "version": [1, 2, 4], "chosen": 1, "f": [1, 4], "weight": [1, 2], "fals": [1, 2, 4], "posit": [1, 2, 4], "neg": 1, "costli": 1, "ideal": 1, "cost": 1, "ratio": 1, "want": [1, 2, 4, 5], "care": [1, 4], "prevent": [1, 2, 4, 5], "stage": [1, 2, 5], "recov": [1, 2], "chang": [1, 4], "fscore_beta": [1, 2], "75": [1, 5], "enter": 1, "phase": 1, "unless": 1, "homicid": 1, "sort": [1, 4], "remain": 1, "descend": [1, 4], "check": [1, 2, 4, 5], "valid": [1, 2, 4, 5], "result": [1, 3], "logic": [1, 2, 4], "graph": [1, 2], "connect": [1, 2], "wa": [1, 2, 5], "after": [1, 5], "re": [1, 2, 4], "left": [1, 2, 4], "cluster_id": [1, 2, 4], "impli": [1, 4], "ident": [1, 4], "plu": [1, 2], "convent": 1, "also": [1, 4], "conveni": 1, "move": [1, 4], "summar": 1, "think": [1, 4], "fail": 1, "run": [1, 2, 5], "report": [1, 2, 5], "impact": [1, 2], "fix": [1, 4], "html": [1, 2], "kei": [1, 2, 4], "along": [1, 2], "term": [1, 5], "mai": [1, 2, 4], "investig": 1, "do": [1, 2, 3, 4], "true": [1, 2, 4, 5], "ever": 1, "cover": [1, 2, 5], "100": 1, "intend": 1, "weed": 1, "obviou": 1, "noth": [1, 2], "alik": 1, "got": 1, "entir": [1, 2, 4], "okai": 1, "practic": 1, "seen": 1, "around": 1, "90": [1, 5], "95": 1, "though": 1, "guarante": 1, "manual": [1, 4], "sure": [1, 3], "peek": 1, "uncov": [1, 2, 5], "accord": [1, 2, 4], "valuabl": 1, "diagnos": 1, "d": [1, 2, 4], "precis": [1, 5], "recal": [1, 5], "rate": [1, 5], "experi": [1, 5], "99": 1, "underperform": 1, "load": [1, 2, 4], "miss": [1, 2, 4], "flip": [1, 2], "pai": 1, "close": 1, "attent": 1, "right": [1, 2], "systemat": 1, "isn": 1, "pattern": 1, "correctli": [1, 2], "correct": [1, 2], "error": [1, 4], "fine": 1, "eyebal": 1, "test": [1, 4], "brows": 1, "trickier": 1, "solv": [1, 4], "low": [1, 2], "6": [1, 4], "8": 1, "lower": 1, "try": [1, 2, 4], "exercis": 1, "fall": 1, "seem": 1, "increas": 1, "product": 1, "essenti": [1, 2, 4], "saniti": 1, "summari": 1, "stat": [1, 2], "10": 1, "000": [1, 4], "year": [1, 4], "mayb": 1, "On": 1, "been": [1, 2, 4], "period": 1, "perhap": 1, "strict": 1, "often": [1, 2], "worth": 1, "directli": 1, "idea": 1, "randomli": [1, 2], "moder": 1, "size": [1, 2], "inde": 1, "notic": [1, 4], "review": 1, "occur": [1, 4], "adjust": [1, 4], "perfectli": 1, "said": 1, "cannot": [1, 4], "held": [1, 4], "until": 1, "eras": 1, "contrast": 1, "situat": 1, "done": [1, 4], "caution": 1, "No": 1, "unsupervis": 1, "r": 1, "fastlink": 1, "activ": 1, "better": [1, 5], "suit": 1, "scenario": 1, "Not": 1, "extent": 1, "correl": 1, "small": [1, 2], "extens": 1, "accept": [1, 2], "clean": [1, 2, 4], "20": 1, "25": 1, "less": [1, 2, 4, 5], "former": 1, "strong": 1, "signal": 1, "everyon": 1, "encount": [1, 4], "never": 1, "misspel": 1, "decad": 1, "bad": 1, "quantifi": [1, 2], "apart": 1, "partial": 1, "current": [1, 2, 4], "pick": [1, 2], "treat": [1, 2, 4], "honor": 1, "footnot": 1, "higher": [1, 2], "node": 1, "network": 1, "deem": [1, 2, 4], "henc": 1, "rememb": 1, "limit": [1, 2, 4], "partial_ssn": 1, "replac": [1, 4], "percentag": [1, 4], "Then": 1, "class": [2, 4], "dict": 2, "none": [2, 4], "default_param": 2, "og_blocking_index_fil": [2, 4], "str": [2, 4], "trained_model_info_fil": 2, "nm_info_fil": 2, "nm_info": 2, "log_file_nam": 2, "logging_params_fil": 2, "output_dir": 2, "output": [2, 3, 4, 5], "output_temp_dir": 2, "all_names_fil": 2, "all_nam": 2, "parquet": 2, "must_link": 2, "blocking_index_bin_fil": 2, "blocking_index": [2, 4], "bin": [2, 4], "candidate_pairs_fil": 2, "candidate_pair": 2, "data_rows_dir": 2, "data_row": 2, "selection_model_nam": 2, "basic_selection_model": 2, "pkl": 2, "match_model_nam": 2, "basic_match_model": 2, "flipped0_fil": 2, "flipped0_potential_link": 2, "model_dir": 2, "model_info_fil": 2, "potential_edges_dir": 2, "potential_link": 2, "cluster_assign": 2, "edges_to_clust": 2, "an_output_fil": 2, "all_names_with_clusterid": 2, "report_fil": 2, "matching_report": 2, "enable_lprof": 2, "bool": [2, 4], "logging_level": 2, "info": [2, 4], "param": 2, "interfac": 2, "step": [2, 4], "properti": 2, "all_task": 2, "nm_metadata": 2, "state": 2, "necessari": [2, 3, 4], "attribut": 2, "recreat": 2, "write_params_schema_fil": 2, "write_stats_fil": 2, "method": 2, "kick": 2, "off": 2, "write": [2, 4], "classmethod": 2, "load_namematch": 2, "nm_info_file_path": 2, "new_nm_info_fil": 2, "kwarg": 2, "stats_dict": 2, "path": [2, 4], "validate_param_dict": 2, "match": [2, 5], "handl": [2, 4], "static": 2, "check_integr": 2, "param_valu": 2, "ensur": [2, 4, 5], "name": [2, 5], "init": 2, "filepath": [2, 4], "load_from_dict": 2, "param_dict": 2, "check_for_required_vari": 2, "requir": [2, 3, 4], "validate_exactmatch_vari": 2, "exact_match_vari": 2, "negate_exact_match_vari": 2, "validate_blocking_schem": 2, "scheme": 2, "i": [2, 3, 5], "format": [2, 4], "provi": 2, "minimum": 2, "cosine_dist": 2, "edit_dist": 2, "absvalue_dist": 2, "get_blocking_vari": 2, "us": [2, 3, 5], "output_fil": 2, "deep": 2, "stage_params_lookup": 2, "get_stage_param": 2, "datafilelist": 2, "variablelist": 2, "schema_dict": 2, "datafil": 2, "validated_data_file_dict": 2, "parent": 2, "newdatafil": 2, "existingdatefil": 2, "detail": [2, 3, 5], "input": [2, 3, 5], "data_file_dict": 2, "existingdatafil": 2, "validate_exist": 2, "validate_record_id_col": 2, "data_files_dict": 2, "existing_data_files_dict": 2, "data_files_list_dict": 2, "get_all_nicknam": 2, "overal": 2, "validate_nam": 2, "stem": 2, "get_all_data_fil": 2, "retriev": 2, "regardless": 2, "validated_variable_dict": 2, "variable_dict": 2, "validate_col_paramet": 2, "_col": [2, 4], "defint": 2, "get_columns_to_read": 2, "file_nicknam": 2, "get_an_column": 2, "variable_list": 2, "variable_dict_list": 2, "variables_list_dict": 2, "referenc": [2, 4], "actual": 2, "validate_variable_nam": 2, "validate_type_count": 2, "increment": 2, "existingid": [2, 4], "get_variables_wher": 2, "attr": 2, "attr_valu": 2, "equality_typ": 2, "equal": [2, 4, 5], "return_typ": 2, "select": [2, 4], "condit": 2, "compare_typ": [2, 4], "categori": 2, "ix": 2, "get_nam": 2, "get_an_column_nam": 2, "intern": 2, "processinputdata": 2, "arg": 2, "namematchbas": 2, "kw": 2, "raw": 2, "process_geo_column": 2, "df": 2, "pd": 2, "geo": 2, "parse_address": 2, "pars": 2, "distinct": 2, "54": 2, "east": 2, "18th": 2, "rd": 2, "suffix": 2, "tupl": 2, "process_address_column": 2, "logger": 2, "123": 2, "st": 2, "matter": [2, 4], "process_check": 2, "process_data": 2, "chunk": 2, "concaten": 2, "sep": 2, "1": [2, 4, 5], "process_set_miss": 2, "set_missing_list": 2, "process_drop": 2, "drop_list": 2, "process_auto_drop": 2, "existing_drop_list": 2, "drop_log": 2, "privat": 2, "generatemustlink": 2, "build_ml_var_df": 2, "uid_vars_list": 2, "relev": [2, 4], "colum": 2, "new_record": 2, "has_ml_var": [], "ml": [], "stand": [], "get_must_link": 2, "ml_var_df": 2, "togeht": 2, "record_id_1": 2, "record_id_2": 2, "blockstring_1": 2, "blockstring_2": 2, "drop_from_nm_1": 2, "elig": 2, "drop_from_nm_2": 2, "must_links_fil": 2, "doesn": [2, 4], "outlin": 2, "split_last_nam": 2, "last_name_column": 2, "blocking_schem": 2, "doubl": 2, "sam": 2, "orig_last_nam": 2, "orig_record": 2, "convert_all_names_to_blockstring_info": 2, "absval_col": 2, "split_nam": 2, "nn": 2, "ed": 2, "av": 2, "ab": 2, "nn_string": 2, "ed_str": 2, "absval_str": 2, "absolut": 2, "nn_string_info": 2, "commonness_penalti": 2, "float": [2, 4], "n_new": 2, "n_exist": 2, "n_total": 2, "nn_string_expanded_df": 2, "nn_string_ful": 2, "un": 2, "get_query_str": 2, "nn_string_info_to_queri": 2, "nn_strings_to_queri": 2, "shingles_to_queri": 2, "scipi": 2, "spars": 2, "csr_matrix": 2, "matrix": 2, "generate_shingles_matrix": 2, "power": 2, "matrix_typ": 2, "verbos": 2, "2": [2, 4], "control": [2, 4], "length": 2, "descript": [2, 4], "statu": 2, "messag": 2, "desir": [2, 4], "load_main_index": 2, "index_fil": 2, "reusabl": 2, "over": [2, 4, 5], "store": [2, 4], "floatindex": 2, "generate_index": 2, "num_work": [2, 4], "m": [2, 4], "efc": 2, "post": 2, "print_progress": 2, "put": 2, "int": [2, 4], "thread": 2, "parallel": [2, 4], "creation": 2, "get_indic": 2, "all_nn_str": 2, "wrapper": 2, "coordin": 2, "main_index": 2, "main_index_nn_str": 2, "second_index": 2, "secondari": 2, "second_index_nn_str": 2, "generate_candidate_pair": 2, "batch_siz": 2, "batch": 2, "10000": 2, "modifi": 2, "element": 2, "cos_dist": 2, "covered_pair": 2, "compute_cosine_sim": 2, "blockstrings_in_pair": 2, "pairs_df": 2, "shingles_matrix": 2, "fast": 2, "differ": [2, 4, 5], "nn_strings_1": 2, "nn_strings_2": 2, "both_nn_str": 2, "nn_string_1": 2, "nn_string_2": 2, "evaluate_block": 2, "cp_df": 2, "tp_df": 2, "success": [2, 5], "minim": [2, 4], "maxim": 2, "add_uncovered_pair": 2, "candidate_pairs_df": 2, "uncovered_pairs_df": 2, "evalu": [2, 4], "apply_blocking_filt": 2, "nns_match": 2, "hold": 2, "commonness_penalty_1": 2, "penalti": 2, "commonness_penalty_2": 2, "get_exact_match_candidate_pair": 2, "disallow_switched_pair": 2, "keep": [2, 4], "nn_string1": 2, "nn_string2": 2, "duplic": 2, "abbi": 2, "zabbi": 2, "ture": 2, "ba": 2, "get_actual_candid": 2, "near_neighbors_df": 2, "launch": 2, "worker": [2, 4], "speed": [2, 4], "nn_string_ix": 2, "locat": 2, "nn_strings_queried_this_batch": 2, "panda": [2, 4], "rather": [2, 4], "written": [2, 5], "get_near_neighbors_df": 2, "near_neighbors_list": 2, "nn_strings_this_index": 2, "enumer": 2, "k": 2, "whose": 2, "nn_string_info_multi": 2, "blocking_threshold": 2, "skip": [2, 5], "bar": 2, "get_blocking_column": 2, "read_an": 2, "an_fil": 2, "nn_col": 2, "ed_col": 2, "nm": 2, "get_nn_string_count": 2, "count": [2, 4], "n_record": 2, "get_common_name_penalti": 2, "clean_last_nam": 2, "max_penalti": 2, "num_threshold_bin": 2, "1000": 2, "handa": 2, "reciev": 2, "maximum": 2, "commonn": 2, "get_all_shingl": 2, "prep_index": 2, "structur": 2, "consum": 2, "nnmslib": 2, "get_second_index_nn_str": 2, "main_nn_str": 2, "haven": 2, "save_main_index": 2, "main_index_fil": 2, "pickl": 2, "dump": 2, "load_main_index_nn_str": 2, "nmslbi": 2, "origin": [2, 4], "write_some_cp": 2, "cand_pair": 2, "header": 2, "generate_true_pair": 2, "must_links_df": 2, "reduc": 2, "generatedatarow": 2, "dir": 2, "generate_name_probabilities_object": 2, "fn_col": 2, "ln_col": 2, "generate_name_probabilit": 2, "queryabl": 2, "find_valid_training_record": 2, "an_match_criteria": 2, "generate_actual_data_row": 2, "sbs_df": 2, "np_object": 2, "first_it": 2, "datfram": 2, "_1": 2, "_2": 2, "candidate_pair_ix": 2, "nm_prob": 2, "nameprob": 2, "dr_id": 2, "record_id_1__record_id_2": 2, "recrod": 2, "generate_data_row_fil": 2, "name_prob": 2, "start_ix_work": 2, "end_ix_work": 2, "dr_file": 2, "get_data_row_fil": 2, "perform": [2, 4, 5], "fitmodel": 2, "traiend_model_info_fil": 2, "previous": 2, "flipped0": 2, "dr_file_list": 2, "foreset": 2, "involv": 2, "vars_to_exclud": 2, "n_job": 2, "fit": 2, "job": 2, "mod": 2, "sklearn": 2, "ensembl": 2, "randomforestclassifi": 2, "feature_info": 2, "feature_import": 2, "train_df": 2, "model_typ": 2, "model_info": 2, "no_dob": 2, "evaluate_model": 2, "phats_df": 2, "weight_using_selection_model": 2, "default_threshold": [2, 4], "5": [2, 4], "missingness_model_threshold_boost": 2, "optimize_threshold": [2, 4], "get_train_eval_data": 2, "an_train_eligible_dict": 2, "any_train": 2, "givem": 2, "evaul": 2, "eval": 2, "get_feature_info": 2, "pipelin": 2, "raw_num_col": 2, "raw_cat_col": 2, "extract": 2, "skleran": 2, "went": 2, "feautr": 2, "save_model": 2, "selection_model": 2, "match_model": 2, "define_necessary_model": 2, "missing_mod_field": 2, "assumpt": 2, "folder": 2, "trigger": 2, "separ": [2, 4], "actual_phat_univers": 2, "match_thresh": 2, "nonmatch": 2, "load_and_save_trained_model": 2, "directori": [2, 4], "get_match_train_eligible_flag": 2, "dr_train_eligible_conditions_dict": 2, "add_threshold_dict": 2, "thresholds_dict": 2, "get_flipped0_potential_edg": 2, "allow_clusters_w_multiple_unique_id": [2, 4], "phat": [2, 4, 5], "downstream": 2, "model_to_us": 2, "did": [2, 5], "match_train_elig": 2, "exactmatch": 2, "phat_col": 2, "get_potential_edg": 2, "append": 2, "edg": [2, 5], "place": [2, 4], "obj": 2, "use_uncovered_phat": 2, "get_potential_edges_in_parallel": 2, "dispatch": 2, "paral": 2, "oob": 2, "all_col": 2, "all_model": 2, "prob_match_train": 2, "trainin": 2, "bag": 2, "ones": 2, "get_columns_us": 2, "is_valid_link": 2, "is_valid_clust": 2, "apply_link_prior": 2, "flipped0_edges_fil": 2, "constrant": 2, "script": [2, 4], "get_cluster_log": 2, "auto_is_valid_edg": 2, "edges_df": 2, "uid_col": 2, "leven_thresh": [2, 4], "eid_col": 2, "original_ord": 2, "gt": 2, "uid": 2, "consid": [2, 3, 4], "autom": 2, "valid_edges_df": 2, "auto_is_valid_clust": 2, "propos": 2, "get_initial_clust": 2, "an_df": 2, "previou": [2, 4], "eid": 2, "save_df_to_disk": 2, "potential_edges_fil": 2, "gt_1s_df": 2, "cluster_log": 2, "cluster_info": 2, "constrain": 2, "y": [2, 4], "pend": 2, "modul": 2, "load_cluster_info": 2, "wish": [2, 4], "get_ci_ix_map": 2, "cluster_potential_edg": 2, "original_cluster_id": 2, "potential_edg": 2, "dequ": 2, "generateoutput": 2, "cluster_assignments_fil": 2, "output_file_uuid": 2, "clusterid": 2, "create_allnames_clusterid_fil": 2, "cleaned_col_nam": 2, "output_clusterid_fil": 2, "construct": 2, "suppli": 2, "statlogfilt": 2, "logrecord": 2, "setup_log": 2, "log_param": 2, "log_filepath": 2, "filter_stat": 2, "setup": 2, "log_stat": 2, "human_desc": 2, "yaml_desc": 2, "human": [2, 4], "readabl": 2, "phrase": 2, "concis": 2, "compat": 2, "log_runtime_and_memori": 2, "decor": 2, "execut": [2, 5], "max": [2, 5], "memori": [2, 4], "usag": [2, 4], "gb": 2, "measur": 2, "runtim": [2, 4], "load_yaml": 2, "yaml_fil": 2, "dump_yaml": 2, "dict_to_writ": 2, "to_dict": 2, "convert": [2, 4], "easier": 2, "create_nm_record_id": 2, "record_id_seri": 2, "clean_nn_str": 2, "remov": [2, 4], "jr": 2, "sr": 2, "ii": 2, "punctuat": 2, "build_blockstr": 2, "incl_ed_str": 2, "07": 2, "23": 2, "get_nn_string_from_blockstr": 2, "get_ed_string_from_blockstr": 2, "get_endpoint": 2, "num_chunk": 2, "divid": 2, "interv": 2, "load_sampl": 2, "csv_path": 2, "pct": 2, "col": 2, "percent": 2, "load_csv_list": 2, "df_file_list": 2, "conditions_dict": 2, "load_parquet": 2, "df_file": 2, "load_parquet_list": 2, "determine_model_to_us": 2, "dr_df": 2, "statement": 2, "load_model": 2, "recursively_convert_tuple_to_list": 2, "luigi_dict_parameter_to_dict": 2, "filename_friendly_hash": 2, "load_logging_param": 2, "reformat_dict": 2, "quot": 2, "camel_to_snak": 2, "ignoreblackwarn": 2, "children": 2, "event": 2, "generatereport": 2, "readi": 3, "block": [3, 4], "work": [3, 4], "thing": 3, "api": 3, "namematch": [3, 4], "data_structur": 3, "schema": 3, "data_fil": [3, 4], "process_input_data": 3, "generate_must_link": 3, "generate_data_row": 3, "fit_model": 3, "generate_output": 3, "util": 3, "generate_report": 3, "But": 4, "decid": 4, "answer": 4, "question": 4, "properli": 4, "feel": 4, "free": 4, "phone": 4, "sens": 4, "chronolog": 4, "wouldn": 4, "real": 4, "world": 4, "repo": 4, "config_exampl": 4, "file1": 4, "record_id_col": 4, "row_id": 4, "delim": 4, "cluster_typ": 4, "output_file_stem": 4, "file2": 4, "arrest_id": 4, "offend": 4, "first_nam": [4, 5], "arrests_col": 4, "first_nm": 4, "victim_col": 4, "vfirst": 4, "refus": 4, "firm": 4, "busi": 4, "last_nam": [4, 5], "last_nm": 4, "vlast": 4, "birth_dat": 4, "vdob": 4, "null": 4, "age_in_2025": 4, "age_2025": 4, "sex_code_cd": 4, "vsex": 4, "arrestee_id": 4, "set_miss": 4, "nan": 4, "redact": 4, "seal": 4, "pct_train": [4, 5], "9": 4, "overview": 4, "throughout": 4, "short": 4, "serv": 4, "_with_clusterid": 4, "access": 4, "similarili": 4, "dataset_nicknam": 4, "tell": 4, "establish": 4, "empti": 4, "format_str": 4, "ex": 4, "comma": 4, "abil": 4, "advanc": 4, "insensit": 4, "cap": 4, "lowercas": 4, "mix": 4, "somewhat": 4, "highli": 4, "accur": 4, "accident": 4, "student_id": 4, "sometim": 4, "issu": [4, 5], "missingness_model": 4, "p": [4, 5], "programat": 4, "7": 4, "taken": 4, "femal": 4, "fem": 4, "recogn": 4, "standard": 4, "holder": 4, "polic": 4, "offic": 4, "quit": 4, "municip": 4, "greatli": 4, "jane": 4, "1800": 4, "01": 4, "preprocess": 4, "especi": 4, "design": 4, "unknwn": 4, "9999999": 4, "prefer": 4, "placehold": 4, "realli": 4, "2025": 4, "wth": 4, "18": 4, "2010": 4, "26": 4, "2016": 4, "assum": 4, "imperfect": 4, "easi": 4, "defi": 4, "enforc": 4, "who": 4, "transfer": 4, "365": 4, "immedi": 4, "cluster_constraint": 4, "argument": 4, "standalon": 4, "clusterconstraint": 4, "tutori": 4, "notebook": 4, "classifi": [4, 5], "appli": 4, "boolean": 4, "first_name_1": 4, "last_name_1": 4, "dataset_1": 4, "first_name_2": 4, "last_name_2": 4, "dataset_2": 4, "let": 4, "roster": 4, "def": 4, "predicted_links_df": 4, "loc": 4, "program_rost": 4, "pretend": 4, "equip": 4, "district": 4, "n_unique_school": 4, "school_id": 4, "nuniqu": 4, "is_valid": 4, "looser": 4, "confid": 4, "quick": 4, "np": 4, "represetn": 4, "dataset_1_col": 4, "schoolid": 4, "dataset_2_col": 4, "school_identifi": 4, "specifii": 4, "alter": 4, "greatest": 4, "rare": 4, "iter": 4, "approv": 4, "disapprov": 4, "imagin": 4, "depriorit": 4, "valid_links_df": 4, "missing_dob_phat_penalti": 4, "missing_dob": 4, "dob_1": 4, "isnul": 4, "dob_2": 4, "sort_valu": 4, "ascend": 4, "rct": 4, "research": 4, "fiel": 4, "ram": 4, "type_dict": 4, "million": 4, "faster": 4, "scrath": 4, "001": 4, "00": 4, "consist": 4, "slightli": 4, "todai": 4, "tomorrow": 4, "certainli": 4, "brand": 4, "lose": 4, "larger": 4, "awar": 4, "existing_data_fil": 4, "mind": 4, "still": 4, "prefix": 4, "arrests__xxxx": 4, "recommend": 4, "use_record_id_as_i": 4, "scratch": 4, "itself": 4, "advantag": 4, "yeild": 4, "unnecessari": 4, "realiz": 4, "acquir": 4, "subsequ": 4, "incremant": 4, "And": 4, "lax": 4, "impos": 4, "stricter": 4, "carefulli": 4, "print": 5, "consol": 5, "name_match": 5, "finish": 5, "breakdown": 5, "fewer": 5, "bigger": 5, "fraction": 5, "f1": 5, "auc": 5, "heldout": 5, "couldn": 5, "singleton": 5, "themselv": 5, "discov": 5}, "objects": {"namematch": [[2, 0, 0, "-", "block"], [2, 0, 0, "-", "cluster"], [2, 0, 0, "-", "fit_model"], [2, 0, 0, "-", "generate_data_rows"], [2, 0, 0, "-", "generate_must_links"], [2, 0, 0, "-", "generate_output"], [2, 0, 0, "-", "generate_report"], [2, 0, 0, "-", "namematcher"], [2, 0, 0, "-", "predict"], [2, 0, 0, "-", "process_input_data"]], "namematch.block": [[2, 1, 1, "", "Block"], [2, 4, 1, "", "generate_true_pairs"], [2, 4, 1, "", "get_all_shingles"], [2, 4, 1, "", "get_blocking_columns"], [2, 4, 1, "", "get_common_name_penalties"], [2, 4, 1, "", "get_nn_string_counts"], [2, 4, 1, "", "get_second_index_nn_strings"], [2, 4, 1, "", "load_main_index_nn_strings"], [2, 4, 1, "", "prep_index"], [2, 4, 1, "", "read_an"], [2, 4, 1, "", "save_main_index"], [2, 4, 1, "", "write_some_cps"]], "namematch.block.Block": [[2, 2, 1, "", "add_uncovered_pairs"], [2, 2, 1, "", "apply_blocking_filter"], [2, 2, 1, "", "compute_cosine_sim"], [2, 2, 1, "", "convert_all_names_to_blockstring_info"], [2, 2, 1, "", "disallow_switched_pairs"], [2, 2, 1, "", "evaluate_blocking"], [2, 2, 1, "", "generate_candidate_pairs"], [2, 2, 1, "", "generate_index"], [2, 2, 1, "", "generate_shingles_matrix"], [2, 2, 1, "", "get_actual_candidates"], [2, 2, 1, "", "get_exact_match_candidate_pairs"], [2, 2, 1, "", "get_indices"], [2, 2, 1, "", "get_near_neighbors_df"], [2, 2, 1, "", "get_query_strings"], [2, 2, 1, "", "load_main_index"], [2, 2, 1, "", "main"], [2, 3, 1, "", "output_files"], [2, 2, 1, "", "split_last_names"]], "namematch.cluster": [[2, 1, 1, "", "Cluster"], [2, 1, 1, "", "Constraints"]], "namematch.cluster.Cluster": [[2, 2, 1, "", "auto_is_valid_cluster"], [2, 2, 1, "", "auto_is_valid_edge"], [2, 2, 1, "", "cluster_potential_edges"], [2, 2, 1, "", "get_ci_ix_map"], [2, 2, 1, "", "get_cluster_logic"], [2, 2, 1, "", "get_initial_clusters"], [2, 2, 1, "", "get_potential_edges"], [2, 2, 1, "", "load_cluster_info"], [2, 2, 1, "", "main"], [2, 3, 1, "", "output_files"], [2, 2, 1, "", "save_df_to_disk"]], "namematch.cluster.Constraints": [[2, 3, 1, "", "apply_link_priority"], [2, 3, 1, "", "get_columns_used"], [2, 3, 1, "", "is_valid_cluster"], [2, 3, 1, "", "is_valid_link"]], "namematch.data_structures": [[2, 0, 0, "-", "data_file"], [2, 0, 0, "-", "parameters"], [2, 0, 0, "-", "schema"], [2, 0, 0, "-", "variable"]], "namematch.data_structures.data_file": [[2, 1, 1, "", "DataFile"], [2, 1, 1, "", "DataFileList"], [2, 1, 1, "", "ExistingDataFile"], [2, 1, 1, "", "NewDataFile"]], "namematch.data_structures.data_file.DataFile": [[2, 2, 1, "", "copy"], [2, 2, 1, "", "load"], [2, 2, 1, "", "validate_existance"], [2, 2, 1, "", "validate_record_id_col"]], "namematch.data_structures.data_file.DataFileList": [[2, 2, 1, "", "build"], [2, 2, 1, "", "copy"], [2, 2, 1, "", "get_all_data_files"], [2, 2, 1, "", "get_all_nicknames"], [2, 2, 1, "", "load"], [2, 2, 1, "", "validate"], [2, 2, 1, "", "validate_names"], [2, 2, 1, "", "write"]], "namematch.data_structures.data_file.ExistingDataFile": [[2, 2, 1, "", "build"]], "namematch.data_structures.data_file.NewDataFile": [[2, 2, 1, "", "build"]], "namematch.data_structures.parameters": [[2, 1, 1, "", "Parameters"]], "namematch.data_structures.parameters.Parameters": [[2, 2, 1, "", "check_for_required_variables"], [2, 2, 1, "", "check_integrity"], [2, 2, 1, "", "copy"], [2, 2, 1, "", "get_blocking_variables"], [2, 2, 1, "", "get_stage_params"], [2, 2, 1, "", "init"], [2, 2, 1, "", "load"], [2, 2, 1, "", "load_from_dict"], [2, 2, 1, "", "stage_params_lookup"], [2, 2, 1, "", "validate"], [2, 2, 1, "", "validate_blocking_scheme"], [2, 2, 1, "", "validate_exactmatch_variables"], [2, 2, 1, "", "write"]], "namematch.data_structures.schema": [[2, 1, 1, "", "Schema"]], "namematch.data_structures.schema.Schema": [[2, 2, 1, "", "init"], [2, 2, 1, "", "load"], [2, 2, 1, "", "load_from_dict"], [2, 2, 1, "", "write"]], "namematch.data_structures.variable": [[2, 1, 1, "", "Variable"], [2, 1, 1, "", "VariableList"]], "namematch.data_structures.variable.Variable": [[2, 2, 1, "", "build"], [2, 2, 1, "", "copy"], [2, 2, 1, "", "get_an_columns"], [2, 2, 1, "", "get_columns_to_read"], [2, 2, 1, "", "validate_col_parameters"]], "namematch.data_structures.variable.VariableList": [[2, 2, 1, "", "build"], [2, 2, 1, "", "copy"], [2, 2, 1, "", "get_an_column_names"], [2, 2, 1, "", "get_columns_to_read"], [2, 2, 1, "", "get_names"], [2, 2, 1, "", "get_variables_where"], [2, 2, 1, "", "load"], [2, 2, 1, "", "validate"], [2, 2, 1, "", "validate_col_parameters"], [2, 2, 1, "", "validate_type_counts"], [2, 2, 1, "", "validate_variable_names"], [2, 2, 1, "", "write"]], "namematch.fit_model": [[2, 1, 1, "", "FitModel"], [2, 4, 1, "", "add_threshold_dict"], [2, 4, 1, "", "define_necessary_models"], [2, 4, 1, "", "get_feature_info"], [2, 4, 1, "", "get_flipped0_potential_edges"], [2, 4, 1, "", "get_match_train_eligible_flag"], [2, 4, 1, "", "load_and_save_trained_model"], [2, 4, 1, "", "save_models"]], "namematch.fit_model.FitModel": [[2, 3, 1, "", "dr_file_list"], [2, 2, 1, "", "evaluate_models"], [2, 2, 1, "", "find_valid_training_records"], [2, 2, 1, "", "fit_model"], [2, 2, 1, "", "fit_models"], [2, 2, 1, "", "get_train_eval_data"], [2, 2, 1, "", "main"], [2, 3, 1, "", "output_files"]], "namematch.generate_data_rows": [[2, 1, 1, "", "GenerateDataRows"]], "namematch.generate_data_rows.GenerateDataRows": [[2, 2, 1, "", "find_valid_training_records"], [2, 2, 1, "", "generate_actual_data_rows"], [2, 2, 1, "", "generate_data_row_files"], [2, 2, 1, "", "generate_name_probabilities_object"], [2, 2, 1, "", "main"], [2, 3, 1, "", "output_files"]], "namematch.generate_must_links": [[2, 1, 1, "", "GenerateMustLinks"]], "namematch.generate_must_links.GenerateMustLinks": [[2, 2, 1, "", "build_ml_var_df"], [2, 2, 1, "", "get_must_links"], [2, 2, 1, "", "main"], [2, 3, 1, "", "output_files"]], "namematch.generate_output": [[2, 1, 1, "", "GenerateOutput"]], "namematch.generate_output.GenerateOutput": [[2, 2, 1, "", "create_allnames_clusterid_file"], [2, 2, 1, "", "main"], [2, 2, 1, "", "output_clusterid_files"], [2, 3, 1, "", "output_files"]], "namematch.generate_report": [[2, 1, 1, "", "GenerateReport"], [2, 1, 1, "", "IgnoreBlackWarning"]], "namematch.generate_report.GenerateReport": [[2, 2, 1, "", "main"], [2, 3, 1, "", "output_files"]], "namematch.generate_report.IgnoreBlackWarning": [[2, 2, 1, "", "filter"]], "namematch.namematcher": [[2, 1, 1, "", "NameMatcher"]], "namematch.namematcher.NameMatcher": [[2, 3, 1, "", "all_tasks"], [2, 3, 1, "", "block"], [2, 3, 1, "", "cluster"], [2, 3, 1, "", "fit_model"], [2, 3, 1, "", "generate_data_rows"], [2, 3, 1, "", "generate_must_links"], [2, 3, 1, "", "generate_output"], [2, 3, 1, "", "generate_report"], [2, 2, 1, "", "load_namematcher"], [2, 3, 1, "", "nm_metadata"], [2, 3, 1, "", "predict"], [2, 3, 1, "", "process_input_data"], [2, 2, 1, "", "run"]], "namematch.predict": [[2, 1, 1, "", "Predict"]], "namematch.predict.Predict": [[2, 3, 1, "", "dr_file_list"], [2, 2, 1, "", "get_potential_edges"], [2, 2, 1, "", "get_potential_edges_in_parallel"], [2, 2, 1, "", "main"], [2, 3, 1, "", "output_files"], [2, 2, 1, "", "predict"]], "namematch.process_input_data": [[2, 1, 1, "", "ProcessInputData"], [2, 4, 1, "", "process_auto_drops"], [2, 4, 1, "", "process_drop"], [2, 4, 1, "", "process_set_missing"]], "namematch.process_input_data.ProcessInputData": [[2, 2, 1, "", "main"], [2, 3, 1, "", "output_files"], [2, 2, 1, "", "parse_address"], [2, 2, 1, "", "process_address_column"], [2, 2, 1, "", "process_check"], [2, 2, 1, "", "process_data"], [2, 2, 1, "", "process_geo_column"]], "namematch.utils": [[2, 0, 0, "-", "utils"]], "namematch.utils.utils": [[2, 1, 1, "", "StatLogFilter"], [2, 4, 1, "", "build_blockstring"], [2, 4, 1, "", "camel_to_snake"], [2, 4, 1, "", "clean_nn_string"], [2, 4, 1, "", "create_nm_record_id"], [2, 4, 1, "", "determine_model_to_use"], [2, 4, 1, "", "dump_yaml"], [2, 4, 1, "", "filename_friendly_hash"], [2, 4, 1, "", "get_ed_string_from_blockstring"], [2, 4, 1, "", "get_endpoints"], [2, 4, 1, "", "get_nn_string_from_blockstring"], [2, 4, 1, "", "load_csv_list"], [2, 4, 1, "", "load_logging_params"], [2, 4, 1, "", "load_models"], [2, 4, 1, "", "load_parquet"], [2, 4, 1, "", "load_parquet_list"], [2, 4, 1, "", "load_sample"], [2, 4, 1, "", "load_yaml"], [2, 4, 1, "", "log_runtime_and_memory"], [2, 4, 1, "", "log_stat"], [2, 4, 1, "", "luigi_dict_parameter_to_dict"], [2, 4, 1, "", "recursively_convert_tuple_to_list"], [2, 4, 1, "", "reformat_dict"], [2, 4, 1, "", "setup_logging"], [2, 4, 1, "", "to_dict"]], "namematch.utils.utils.StatLogFilter": [[2, 2, 1, "", "filter"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:property", "4": "py:function"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "property", "Python property"], "4": ["py", "function", "Python function"]}, "titleterms": {"about": 0, "name": [0, 1, 3, 4], "match": [0, 1, 3, 4], "what": 0, "i": [0, 1, 4], "do": 0, "requir": [0, 1], "us": [0, 1, 4], "input": [0, 1, 4], "output": [0, 1], "detail": 1, "algorithm": 1, "document": [1, 3], "why": 1, "necessari": 1, "conceptu": 1, "background": 1, "how": 1, "work": 1, "step": 1, "1": 1, "setup": 1, "2": 1, "block": [1, 2, 5], "3": 1, "measur": 1, "differ": 1, "4": 1, "model": [1, 5], "5": 1, "cluster": [1, 2, 5], "thing": 1, "consid": 1, "evalu": 1, "perform": 1, "identifi": [1, 4], "issu": 1, "when": 1, "wari": 1, "api": 2, "refer": 2, "namematch": 2, "data_structur": 2, "paramet": [2, 4], "schema": 2, "data_fil": 2, "variabl": [2, 4], "process_input_data": 2, "generate_must_link": 2, "generate_data_row": 2, "fit_model": 2, "predict": 2, "generate_output": 2, "util": 2, "generate_report": 2, "set": 4, "up": 4, "which": 4, "field": 4, "creat": 4, "configur": 4, "file": 4, "data": 4, "structur": 4, "gener": 4, "pre": 4, "process": 4, "make": 4, "sure": 4, "your": 4, "readi": 4, "user": 4, "defin": 4, "constraint": 4, "function": 4, "is_valid_link": 4, "is_valid_clust": 4, "addit": 4, "apply_link_prior": 4, "get_columns_us": 4, "special": 4, "case": 4, "increment": 4, "run": 4, "understand": 5, "result": 5}, "envversion": {"sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.viewcode": 1, "sphinx": 58}, "alltitles": {"About Name Match": [[0, "about-name-match"]], "What is Name Match doing?": [[0, "what-is-name-match-doing"]], "Requirements for using Name Match": [[0, "requirements-for-using-name-match"], [1, "requirements-for-using-name-match"]], "Inputs and outputs": [[0, "inputs-and-outputs"]], "Detailed Algorithm Documentation": [[1, "detailed-algorithm-documentation"]], "Why is Name Match necessary": [[1, "why-is-name-match-necessary"]], "Conceptual background": [[1, "conceptual-background"]], "How it works": [[1, "how-it-works"]], "Name Match inputs and outputs": [[1, "name-match-inputs-and-outputs"]], "Step 1: Setup": [[1, "step-1-setup"]], "Step 2: Blocking": [[1, "step-2-blocking"]], "Step 3: Measuring differences": [[1, "step-3-measuring-differences"]], "Step 4: Modeling": [[1, "step-4-modeling"]], "Step 5: Clustering": [[1, "step-5-clustering"]], "Things to consider": [[1, "things-to-consider"]], "Evaluating performance and identifying issues": [[1, "evaluating-performance-and-identifying-issues"]], "When to be wary of using Name Match": [[1, "when-to-be-wary-of-using-name-match"]], "Name Match Documentation": [[3, "name-match-documentation"]], "Setting Up a Match": [[4, "setting-up-a-match"]], "Identifying which fields to use": [[4, "identifying-which-fields-to-use"]], "Creating the configuration file": [[4, "creating-the-configuration-file"]], "Input data files": [[4, "input-data-files"]], "Variable structure": [[4, "variable-structure"]], "General parameters": [[4, "general-parameters"]], "Pre-processing: making sure your data is ready for Name Match": [[4, "pre-processing-making-sure-your-data-is-ready-for-name-match"]], "Creating user defined constraint functions": [[4, "creating-user-defined-constraint-functions"]], "is_valid_link()": [[4, "is-valid-link"]], "is_valid_cluster()": [[4, "is-valid-cluster"]], "Additional user-defined functions": [[4, "additional-user-defined-functions"]], "apply_link_priority()": [[4, "apply-link-priority"]], "get_columns_used()": [[4, "get-columns-used"]], "Special cases": [[4, "special-cases"]], "Incremental runs": [[4, "incremental-runs"]], "Understanding Results": [[5, "understanding-results"]], "Blocking": [[5, "blocking"]], "Modeling": [[5, "modeling"]], "Clustering": [[5, "clustering"]], "API Reference": [[2, "api-reference"]], "namematch.namematcher": [[2, "module-namematch.namematcher"]], "namematch.data_structures.parameters": [[2, "module-namematch.data_structures.parameters"]], "namematch.data_structures.schema": [[2, "module-namematch.data_structures.schema"]], "namematch.data_structures.data_file": [[2, "module-namematch.data_structures.data_file"]], "namematch.data_structures.variable": [[2, "module-namematch.data_structures.variable"]], "namematch.process_input_data": [[2, "module-namematch.process_input_data"]], "namematch.generate_must_links": [[2, "module-namematch.generate_must_links"]], "namematch.block": [[2, "module-namematch.block"]], "namematch.generate_data_rows": [[2, "module-namematch.generate_data_rows"]], "namematch.fit_model": [[2, "module-namematch.fit_model"]], "namematch.predict": [[2, "module-namematch.predict"]], "namematch.cluster": [[2, "module-namematch.cluster"]], "namematch.generate_output": [[2, "module-namematch.generate_output"]], "namematch.utils.utils": [[2, "module-namematch.utils.utils"]], "namematch.generate_report": [[2, "module-namematch.generate_report"]]}, "indexentries": {"block (class in namematch.block)": [[2, "namematch.block.Block"]], "cluster (class in namematch.cluster)": [[2, "namematch.cluster.Cluster"]], "constraints (class in namematch.cluster)": [[2, "namematch.cluster.Constraints"]], "datafile (class in namematch.data_structures.data_file)": [[2, "namematch.data_structures.data_file.DataFile"]], "datafilelist (class in namematch.data_structures.data_file)": [[2, "namematch.data_structures.data_file.DataFileList"]], "existingdatafile (class in namematch.data_structures.data_file)": [[2, "namematch.data_structures.data_file.ExistingDataFile"]], "fitmodel (class in namematch.fit_model)": [[2, "namematch.fit_model.FitModel"]], "generatedatarows (class in namematch.generate_data_rows)": [[2, "namematch.generate_data_rows.GenerateDataRows"]], "generatemustlinks (class in namematch.generate_must_links)": [[2, "namematch.generate_must_links.GenerateMustLinks"]], "generateoutput (class in namematch.generate_output)": [[2, "namematch.generate_output.GenerateOutput"]], "generatereport (class in namematch.generate_report)": [[2, "namematch.generate_report.GenerateReport"]], "ignoreblackwarning (class in namematch.generate_report)": [[2, "namematch.generate_report.IgnoreBlackWarning"]], "namematcher (class in namematch.namematcher)": [[2, "namematch.namematcher.NameMatcher"]], "newdatafile (class in namematch.data_structures.data_file)": [[2, "namematch.data_structures.data_file.NewDataFile"]], "parameters (class in namematch.data_structures.parameters)": [[2, "namematch.data_structures.parameters.Parameters"]], "predict (class in namematch.predict)": [[2, "namematch.predict.Predict"]], "processinputdata (class in namematch.process_input_data)": [[2, "namematch.process_input_data.ProcessInputData"]], "schema (class in namematch.data_structures.schema)": [[2, "namematch.data_structures.schema.Schema"]], "statlogfilter (class in namematch.utils.utils)": [[2, "namematch.utils.utils.StatLogFilter"]], "variable (class in namematch.data_structures.variable)": [[2, "namematch.data_structures.variable.Variable"]], "variablelist (class in namematch.data_structures.variable)": [[2, "namematch.data_structures.variable.VariableList"]], "add_threshold_dict() (in module namematch.fit_model)": [[2, "namematch.fit_model.add_threshold_dict"]], "add_uncovered_pairs() (namematch.block.block method)": [[2, "namematch.block.Block.add_uncovered_pairs"]], "all_tasks (namematch.namematcher.namematcher property)": [[2, "namematch.namematcher.NameMatcher.all_tasks"]], "apply_blocking_filter() (namematch.block.block method)": [[2, "namematch.block.Block.apply_blocking_filter"]], "apply_link_priority (namematch.cluster.constraints property)": [[2, "namematch.cluster.Constraints.apply_link_priority"]], "auto_is_valid_cluster() (namematch.cluster.cluster method)": [[2, "namematch.cluster.Cluster.auto_is_valid_cluster"]], "auto_is_valid_edge() (namematch.cluster.cluster method)": [[2, "namematch.cluster.Cluster.auto_is_valid_edge"]], "block (namematch.namematcher.namematcher property)": [[2, "namematch.namematcher.NameMatcher.block"]], "build() (namematch.data_structures.data_file.datafilelist class method)": [[2, "namematch.data_structures.data_file.DataFileList.build"]], "build() (namematch.data_structures.data_file.existingdatafile class method)": [[2, "namematch.data_structures.data_file.ExistingDataFile.build"]], "build() (namematch.data_structures.data_file.newdatafile class method)": [[2, "namematch.data_structures.data_file.NewDataFile.build"]], "build() (namematch.data_structures.variable.variable class method)": [[2, "namematch.data_structures.variable.Variable.build"]], "build() (namematch.data_structures.variable.variablelist class method)": [[2, "namematch.data_structures.variable.VariableList.build"]], "build_blockstring() (in module namematch.utils.utils)": [[2, "namematch.utils.utils.build_blockstring"]], "build_ml_var_df() (namematch.generate_must_links.generatemustlinks method)": [[2, "namematch.generate_must_links.GenerateMustLinks.build_ml_var_df"]], "camel_to_snake() (in module namematch.utils.utils)": [[2, "namematch.utils.utils.camel_to_snake"]], "check_for_required_variables() (namematch.data_structures.parameters.parameters method)": [[2, "namematch.data_structures.parameters.Parameters.check_for_required_variables"]], "check_integrity() (namematch.data_structures.parameters.parameters static method)": [[2, "namematch.data_structures.parameters.Parameters.check_integrity"]], "clean_nn_string() (in module namematch.utils.utils)": [[2, "namematch.utils.utils.clean_nn_string"]], "cluster (namematch.namematcher.namematcher property)": [[2, "namematch.namematcher.NameMatcher.cluster"]], "cluster_potential_edges() (namematch.cluster.cluster method)": [[2, "namematch.cluster.Cluster.cluster_potential_edges"]], "compute_cosine_sim() (namematch.block.block method)": [[2, "namematch.block.Block.compute_cosine_sim"]], "convert_all_names_to_blockstring_info() (namematch.block.block method)": [[2, "namematch.block.Block.convert_all_names_to_blockstring_info"]], "copy() (namematch.data_structures.data_file.datafile method)": [[2, "namematch.data_structures.data_file.DataFile.copy"]], "copy() (namematch.data_structures.data_file.datafilelist method)": [[2, "namematch.data_structures.data_file.DataFileList.copy"]], "copy() (namematch.data_structures.parameters.parameters method)": [[2, "namematch.data_structures.parameters.Parameters.copy"]], "copy() (namematch.data_structures.variable.variable method)": [[2, "namematch.data_structures.variable.Variable.copy"]], "copy() (namematch.data_structures.variable.variablelist method)": [[2, "namematch.data_structures.variable.VariableList.copy"]], "create_allnames_clusterid_file() (namematch.generate_output.generateoutput method)": [[2, "namematch.generate_output.GenerateOutput.create_allnames_clusterid_file"]], "create_nm_record_id() (in module namematch.utils.utils)": [[2, "namematch.utils.utils.create_nm_record_id"]], "define_necessary_models() (in module namematch.fit_model)": [[2, "namematch.fit_model.define_necessary_models"]], "determine_model_to_use() (in module namematch.utils.utils)": [[2, "namematch.utils.utils.determine_model_to_use"]], "disallow_switched_pairs() (namematch.block.block method)": [[2, "namematch.block.Block.disallow_switched_pairs"]], "dr_file_list (namematch.fit_model.fitmodel property)": [[2, "namematch.fit_model.FitModel.dr_file_list"]], "dr_file_list (namematch.predict.predict property)": [[2, "namematch.predict.Predict.dr_file_list"]], "dump_yaml() (in module namematch.utils.utils)": [[2, "namematch.utils.utils.dump_yaml"]], "evaluate_blocking() (namematch.block.block method)": [[2, "namematch.block.Block.evaluate_blocking"]], "evaluate_models() (namematch.fit_model.fitmodel method)": [[2, "namematch.fit_model.FitModel.evaluate_models"]], "filename_friendly_hash() (in module namematch.utils.utils)": [[2, "namematch.utils.utils.filename_friendly_hash"]], "filter() (namematch.generate_report.ignoreblackwarning method)": [[2, "namematch.generate_report.IgnoreBlackWarning.filter"]], "filter() (namematch.utils.utils.statlogfilter method)": [[2, "namematch.utils.utils.StatLogFilter.filter"]], "find_valid_training_records() (namematch.fit_model.fitmodel method)": [[2, "namematch.fit_model.FitModel.find_valid_training_records"]], "find_valid_training_records() (namematch.generate_data_rows.generatedatarows method)": [[2, "namematch.generate_data_rows.GenerateDataRows.find_valid_training_records"]], "fit_model (namematch.namematcher.namematcher property)": [[2, "namematch.namematcher.NameMatcher.fit_model"]], "fit_model() (namematch.fit_model.fitmodel method)": [[2, "namematch.fit_model.FitModel.fit_model"]], "fit_models() (namematch.fit_model.fitmodel method)": [[2, "namematch.fit_model.FitModel.fit_models"]], "generate_actual_data_rows() (namematch.generate_data_rows.generatedatarows method)": [[2, "namematch.generate_data_rows.GenerateDataRows.generate_actual_data_rows"]], "generate_candidate_pairs() (namematch.block.block method)": [[2, "namematch.block.Block.generate_candidate_pairs"]], "generate_data_row_files() (namematch.generate_data_rows.generatedatarows method)": [[2, "namematch.generate_data_rows.GenerateDataRows.generate_data_row_files"]], "generate_data_rows (namematch.namematcher.namematcher property)": [[2, "namematch.namematcher.NameMatcher.generate_data_rows"]], "generate_index() (namematch.block.block method)": [[2, "namematch.block.Block.generate_index"]], "generate_must_links (namematch.namematcher.namematcher property)": [[2, "namematch.namematcher.NameMatcher.generate_must_links"]], "generate_name_probabilities_object() (namematch.generate_data_rows.generatedatarows method)": [[2, "namematch.generate_data_rows.GenerateDataRows.generate_name_probabilities_object"]], "generate_output (namematch.namematcher.namematcher property)": [[2, "namematch.namematcher.NameMatcher.generate_output"]], "generate_report (namematch.namematcher.namematcher property)": [[2, "namematch.namematcher.NameMatcher.generate_report"]], "generate_shingles_matrix() (namematch.block.block method)": [[2, "namematch.block.Block.generate_shingles_matrix"]], "generate_true_pairs() (in module namematch.block)": [[2, "namematch.block.generate_true_pairs"]], "get_actual_candidates() (namematch.block.block method)": [[2, "namematch.block.Block.get_actual_candidates"]], "get_all_data_files() (namematch.data_structures.data_file.datafilelist method)": [[2, "namematch.data_structures.data_file.DataFileList.get_all_data_files"]], "get_all_nicknames() (namematch.data_structures.data_file.datafilelist method)": [[2, "namematch.data_structures.data_file.DataFileList.get_all_nicknames"]], "get_all_shingles() (in module namematch.block)": [[2, "namematch.block.get_all_shingles"]], "get_an_column_names() (namematch.data_structures.variable.variablelist method)": [[2, "namematch.data_structures.variable.VariableList.get_an_column_names"]], "get_an_columns() (namematch.data_structures.variable.variable method)": [[2, "namematch.data_structures.variable.Variable.get_an_columns"]], "get_blocking_columns() (in module namematch.block)": [[2, "namematch.block.get_blocking_columns"]], "get_blocking_variables() (namematch.data_structures.parameters.parameters method)": [[2, "namematch.data_structures.parameters.Parameters.get_blocking_variables"]], "get_ci_ix_map() (namematch.cluster.cluster method)": [[2, "namematch.cluster.Cluster.get_ci_ix_map"]], "get_cluster_logic() (namematch.cluster.cluster method)": [[2, "namematch.cluster.Cluster.get_cluster_logic"]], "get_columns_to_read() (namematch.data_structures.variable.variable method)": [[2, "namematch.data_structures.variable.Variable.get_columns_to_read"]], "get_columns_to_read() (namematch.data_structures.variable.variablelist method)": [[2, "namematch.data_structures.variable.VariableList.get_columns_to_read"]], "get_columns_used (namematch.cluster.constraints property)": [[2, "namematch.cluster.Constraints.get_columns_used"]], "get_common_name_penalties() (in module namematch.block)": [[2, "namematch.block.get_common_name_penalties"]], "get_ed_string_from_blockstring() (in module namematch.utils.utils)": [[2, "namematch.utils.utils.get_ed_string_from_blockstring"]], "get_endpoints() (in module namematch.utils.utils)": [[2, "namematch.utils.utils.get_endpoints"]], "get_exact_match_candidate_pairs() (namematch.block.block method)": [[2, "namematch.block.Block.get_exact_match_candidate_pairs"]], "get_feature_info() (in module namematch.fit_model)": [[2, "namematch.fit_model.get_feature_info"]], "get_flipped0_potential_edges() (in module namematch.fit_model)": [[2, "namematch.fit_model.get_flipped0_potential_edges"]], "get_indices() (namematch.block.block method)": [[2, "namematch.block.Block.get_indices"]], "get_initial_clusters() (namematch.cluster.cluster method)": [[2, "namematch.cluster.Cluster.get_initial_clusters"]], "get_match_train_eligible_flag() (in module namematch.fit_model)": [[2, "namematch.fit_model.get_match_train_eligible_flag"]], "get_must_links() (namematch.generate_must_links.generatemustlinks method)": [[2, "namematch.generate_must_links.GenerateMustLinks.get_must_links"]], "get_names() (namematch.data_structures.variable.variablelist method)": [[2, "namematch.data_structures.variable.VariableList.get_names"]], "get_near_neighbors_df() (namematch.block.block method)": [[2, "namematch.block.Block.get_near_neighbors_df"]], "get_nn_string_counts() (in module namematch.block)": [[2, "namematch.block.get_nn_string_counts"]], "get_nn_string_from_blockstring() (in module namematch.utils.utils)": [[2, "namematch.utils.utils.get_nn_string_from_blockstring"]], "get_potential_edges() (namematch.cluster.cluster method)": [[2, "namematch.cluster.Cluster.get_potential_edges"]], "get_potential_edges() (namematch.predict.predict method)": [[2, "namematch.predict.Predict.get_potential_edges"]], "get_potential_edges_in_parallel() (namematch.predict.predict method)": [[2, "namematch.predict.Predict.get_potential_edges_in_parallel"]], "get_query_strings() (namematch.block.block method)": [[2, "namematch.block.Block.get_query_strings"]], "get_second_index_nn_strings() (in module namematch.block)": [[2, "namematch.block.get_second_index_nn_strings"]], "get_stage_params() (namematch.data_structures.parameters.parameters method)": [[2, "namematch.data_structures.parameters.Parameters.get_stage_params"]], "get_train_eval_data() (namematch.fit_model.fitmodel method)": [[2, "namematch.fit_model.FitModel.get_train_eval_data"]], "get_variables_where() (namematch.data_structures.variable.variablelist method)": [[2, "namematch.data_structures.variable.VariableList.get_variables_where"]], "init() (namematch.data_structures.parameters.parameters class method)": [[2, "namematch.data_structures.parameters.Parameters.init"]], "init() (namematch.data_structures.schema.schema class method)": [[2, "namematch.data_structures.schema.Schema.init"]], "is_valid_cluster (namematch.cluster.constraints property)": [[2, "namematch.cluster.Constraints.is_valid_cluster"]], "is_valid_link (namematch.cluster.constraints property)": [[2, "namematch.cluster.Constraints.is_valid_link"]], "load() (namematch.data_structures.data_file.datafile class method)": [[2, "namematch.data_structures.data_file.DataFile.load"]], "load() (namematch.data_structures.data_file.datafilelist class method)": [[2, "namematch.data_structures.data_file.DataFileList.load"]], "load() (namematch.data_structures.parameters.parameters class method)": [[2, "namematch.data_structures.parameters.Parameters.load"]], "load() (namematch.data_structures.schema.schema class method)": [[2, "namematch.data_structures.schema.Schema.load"]], "load() (namematch.data_structures.variable.variablelist class method)": [[2, "namematch.data_structures.variable.VariableList.load"]], "load_and_save_trained_model() (in module namematch.fit_model)": [[2, "namematch.fit_model.load_and_save_trained_model"]], "load_cluster_info() (namematch.cluster.cluster method)": [[2, "namematch.cluster.Cluster.load_cluster_info"]], "load_csv_list() (in module namematch.utils.utils)": [[2, "namematch.utils.utils.load_csv_list"]], "load_from_dict() (namematch.data_structures.parameters.parameters class method)": [[2, "namematch.data_structures.parameters.Parameters.load_from_dict"]], "load_from_dict() (namematch.data_structures.schema.schema class method)": [[2, "namematch.data_structures.schema.Schema.load_from_dict"]], "load_logging_params() (in module namematch.utils.utils)": [[2, "namematch.utils.utils.load_logging_params"]], "load_main_index() (namematch.block.block method)": [[2, "namematch.block.Block.load_main_index"]], "load_main_index_nn_strings() (in module namematch.block)": [[2, "namematch.block.load_main_index_nn_strings"]], "load_models() (in module namematch.utils.utils)": [[2, "namematch.utils.utils.load_models"]], "load_namematcher() (namematch.namematcher.namematcher class method)": [[2, "namematch.namematcher.NameMatcher.load_namematcher"]], "load_parquet() (in module namematch.utils.utils)": [[2, "namematch.utils.utils.load_parquet"]], "load_parquet_list() (in module namematch.utils.utils)": [[2, "namematch.utils.utils.load_parquet_list"]], "load_sample() (in module namematch.utils.utils)": [[2, "namematch.utils.utils.load_sample"]], "load_yaml() (in module namematch.utils.utils)": [[2, "namematch.utils.utils.load_yaml"]], "log_runtime_and_memory() (in module namematch.utils.utils)": [[2, "namematch.utils.utils.log_runtime_and_memory"]], "log_stat() (in module namematch.utils.utils)": [[2, "namematch.utils.utils.log_stat"]], "luigi_dict_parameter_to_dict() (in module namematch.utils.utils)": [[2, "namematch.utils.utils.luigi_dict_parameter_to_dict"]], "main() (namematch.block.block method)": [[2, "namematch.block.Block.main"]], "main() (namematch.cluster.cluster method)": [[2, "namematch.cluster.Cluster.main"]], "main() (namematch.fit_model.fitmodel method)": [[2, "namematch.fit_model.FitModel.main"]], "main() (namematch.generate_data_rows.generatedatarows method)": [[2, "namematch.generate_data_rows.GenerateDataRows.main"]], "main() (namematch.generate_must_links.generatemustlinks method)": [[2, "namematch.generate_must_links.GenerateMustLinks.main"]], "main() (namematch.generate_output.generateoutput method)": [[2, "namematch.generate_output.GenerateOutput.main"]], "main() (namematch.generate_report.generatereport method)": [[2, "namematch.generate_report.GenerateReport.main"]], "main() (namematch.predict.predict method)": [[2, "namematch.predict.Predict.main"]], "main() (namematch.process_input_data.processinputdata method)": [[2, "namematch.process_input_data.ProcessInputData.main"]], "module": [[2, "module-namematch.block"], [2, "module-namematch.cluster"], [2, "module-namematch.data_structures.data_file"], [2, "module-namematch.data_structures.parameters"], [2, "module-namematch.data_structures.schema"], [2, "module-namematch.data_structures.variable"], [2, "module-namematch.fit_model"], [2, "module-namematch.generate_data_rows"], [2, "module-namematch.generate_must_links"], [2, "module-namematch.generate_output"], [2, "module-namematch.generate_report"], [2, "module-namematch.namematcher"], [2, "module-namematch.predict"], [2, "module-namematch.process_input_data"], [2, "module-namematch.utils.utils"]], "namematch.block": [[2, "module-namematch.block"]], "namematch.cluster": [[2, "module-namematch.cluster"]], "namematch.data_structures.data_file": [[2, "module-namematch.data_structures.data_file"]], "namematch.data_structures.parameters": [[2, "module-namematch.data_structures.parameters"]], "namematch.data_structures.schema": [[2, "module-namematch.data_structures.schema"]], "namematch.data_structures.variable": [[2, "module-namematch.data_structures.variable"]], "namematch.fit_model": [[2, "module-namematch.fit_model"]], "namematch.generate_data_rows": [[2, "module-namematch.generate_data_rows"]], "namematch.generate_must_links": [[2, "module-namematch.generate_must_links"]], "namematch.generate_output": [[2, "module-namematch.generate_output"]], "namematch.generate_report": [[2, "module-namematch.generate_report"]], "namematch.namematcher": [[2, "module-namematch.namematcher"]], "namematch.predict": [[2, "module-namematch.predict"]], "namematch.process_input_data": [[2, "module-namematch.process_input_data"]], "namematch.utils.utils": [[2, "module-namematch.utils.utils"]], "nm_metadata (namematch.namematcher.namematcher property)": [[2, "namematch.namematcher.NameMatcher.nm_metadata"]], "output_clusterid_files() (namematch.generate_output.generateoutput method)": [[2, "namematch.generate_output.GenerateOutput.output_clusterid_files"]], "output_files (namematch.block.block property)": [[2, "namematch.block.Block.output_files"]], "output_files (namematch.cluster.cluster property)": [[2, "namematch.cluster.Cluster.output_files"]], "output_files (namematch.fit_model.fitmodel property)": [[2, "namematch.fit_model.FitModel.output_files"]], "output_files (namematch.generate_data_rows.generatedatarows property)": [[2, "namematch.generate_data_rows.GenerateDataRows.output_files"]], "output_files (namematch.generate_must_links.generatemustlinks property)": [[2, "namematch.generate_must_links.GenerateMustLinks.output_files"]], "output_files (namematch.generate_output.generateoutput property)": [[2, "namematch.generate_output.GenerateOutput.output_files"]], "output_files (namematch.generate_report.generatereport property)": [[2, "namematch.generate_report.GenerateReport.output_files"]], "output_files (namematch.predict.predict property)": [[2, "namematch.predict.Predict.output_files"]], "output_files (namematch.process_input_data.processinputdata property)": [[2, "namematch.process_input_data.ProcessInputData.output_files"]], "parse_address() (namematch.process_input_data.processinputdata method)": [[2, "namematch.process_input_data.ProcessInputData.parse_address"]], "predict (namematch.namematcher.namematcher property)": [[2, "namematch.namematcher.NameMatcher.predict"]], "predict() (namematch.predict.predict class method)": [[2, "namematch.predict.Predict.predict"]], "prep_index() (in module namematch.block)": [[2, "namematch.block.prep_index"]], "process_address_column() (namematch.process_input_data.processinputdata method)": [[2, "namematch.process_input_data.ProcessInputData.process_address_column"]], "process_auto_drops() (in module namematch.process_input_data)": [[2, "namematch.process_input_data.process_auto_drops"]], "process_check() (namematch.process_input_data.processinputdata method)": [[2, "namematch.process_input_data.ProcessInputData.process_check"]], "process_data() (namematch.process_input_data.processinputdata method)": [[2, "namematch.process_input_data.ProcessInputData.process_data"]], "process_drop() (in module namematch.process_input_data)": [[2, "namematch.process_input_data.process_drop"]], "process_geo_column() (namematch.process_input_data.processinputdata method)": [[2, "namematch.process_input_data.ProcessInputData.process_geo_column"]], "process_input_data (namematch.namematcher.namematcher property)": [[2, "namematch.namematcher.NameMatcher.process_input_data"]], "process_set_missing() (in module namematch.process_input_data)": [[2, "namematch.process_input_data.process_set_missing"]], "read_an() (in module namematch.block)": [[2, "namematch.block.read_an"]], "recursively_convert_tuple_to_list() (in module namematch.utils.utils)": [[2, "namematch.utils.utils.recursively_convert_tuple_to_list"]], "reformat_dict() (in module namematch.utils.utils)": [[2, "namematch.utils.utils.reformat_dict"]], "run() (namematch.namematcher.namematcher method)": [[2, "namematch.namematcher.NameMatcher.run"]], "save_df_to_disk() (namematch.cluster.cluster method)": [[2, "namematch.cluster.Cluster.save_df_to_disk"]], "save_main_index() (in module namematch.block)": [[2, "namematch.block.save_main_index"]], "save_models() (in module namematch.fit_model)": [[2, "namematch.fit_model.save_models"]], "setup_logging() (in module namematch.utils.utils)": [[2, "namematch.utils.utils.setup_logging"]], "split_last_names() (namematch.block.block method)": [[2, "namematch.block.Block.split_last_names"]], "stage_params_lookup() (namematch.data_structures.parameters.parameters method)": [[2, "namematch.data_structures.parameters.Parameters.stage_params_lookup"]], "to_dict() (in module namematch.utils.utils)": [[2, "namematch.utils.utils.to_dict"]], "validate() (namematch.data_structures.data_file.datafilelist method)": [[2, "namematch.data_structures.data_file.DataFileList.validate"]], "validate() (namematch.data_structures.parameters.parameters method)": [[2, "namematch.data_structures.parameters.Parameters.validate"]], "validate() (namematch.data_structures.variable.variablelist method)": [[2, "namematch.data_structures.variable.VariableList.validate"]], "validate_blocking_scheme() (namematch.data_structures.parameters.parameters method)": [[2, "namematch.data_structures.parameters.Parameters.validate_blocking_scheme"]], "validate_col_parameters() (namematch.data_structures.variable.variable method)": [[2, "namematch.data_structures.variable.Variable.validate_col_parameters"]], "validate_col_parameters() (namematch.data_structures.variable.variablelist method)": [[2, "namematch.data_structures.variable.VariableList.validate_col_parameters"]], "validate_exactmatch_variables() (namematch.data_structures.parameters.parameters method)": [[2, "namematch.data_structures.parameters.Parameters.validate_exactmatch_variables"]], "validate_existance() (namematch.data_structures.data_file.datafile method)": [[2, "namematch.data_structures.data_file.DataFile.validate_existance"]], "validate_names() (namematch.data_structures.data_file.datafilelist method)": [[2, "namematch.data_structures.data_file.DataFileList.validate_names"]], "validate_record_id_col() (namematch.data_structures.data_file.datafile method)": [[2, "namematch.data_structures.data_file.DataFile.validate_record_id_col"]], "validate_type_counts() (namematch.data_structures.variable.variablelist method)": [[2, "namematch.data_structures.variable.VariableList.validate_type_counts"]], "validate_variable_names() (namematch.data_structures.variable.variablelist method)": [[2, "namematch.data_structures.variable.VariableList.validate_variable_names"]], "write() (namematch.data_structures.data_file.datafilelist method)": [[2, "namematch.data_structures.data_file.DataFileList.write"]], "write() (namematch.data_structures.parameters.parameters method)": [[2, "namematch.data_structures.parameters.Parameters.write"]], "write() (namematch.data_structures.schema.schema method)": [[2, "namematch.data_structures.schema.Schema.write"]], "write() (namematch.data_structures.variable.variablelist method)": [[2, "namematch.data_structures.variable.VariableList.write"]], "write_some_cps() (in module namematch.block)": [[2, "namematch.block.write_some_cps"]]}})